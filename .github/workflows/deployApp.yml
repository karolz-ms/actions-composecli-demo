# Deploys the application to Azure Container Instances
#
# Please refer to README file for preparation steps that must be executet manually
# before this action is used (mainly Azure resource group creation, 
# Azure service principal creation, and repository secret setup)

name: DeployApp

on:
  workflow_dispatch

jobs:
  main:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          cat "$GITHUB_WORKSPACE/cloud.env" | awk -F = 'NF == 2 {print $0}' | xargs -L 1 echo >> $GITHUB_ENV

      - name: Verify cloud.env file was updated
        run: |
          if [[ "$REGISTRY_NAME" = 'your-registry-name' ]]; then
            echo 'Error: cloud.env file was not updated'
            exit 1
          fi

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CI_AZURE_CREDENTIALS }}

      - name: Install Docker Compose CLI
        run: >
          curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh

      - name: Docker Login to Azure
        run: |
          CLIENT_ID=$(echo '${{ secrets.CI_AZURE_CREDENTIALS }}' | jq --raw-output .clientId)
          CLIENT_SECRET=$(echo '${{ secrets.CI_AZURE_CREDENTIALS }}' | jq --raw-output .clientSecret)
          TENANT_ID=$(az account show --query homeTenantId --output tsv)
          docker login azure --client-id "$CLIENT_ID" --client-secret "$CLIENT_SECRET" --tenant-id "$TENANT_ID"
          az acr login --name "$REGISTRY_NAME" --username "$CLIENT_ID" --password "$CLIENT_SECRET"

      - name: Create ACI context
        run: |
          SUBSCRIPTION_ID=$(az account show --query id --output tsv)
          docker context create aci acictx --resource-group "$RESOURCE_GROUP" --location "$AZURE_REGION" --subscription-id "$SUBSCRIPTION_ID"
      
      - name: Deploy the app
        run: |
          docker compose --context acictx up -f "$GITHUB_WORKSPACE/docker-compose.aci.yml"

      
